# This workflow will build a Node.js project and deploy it to an Azure Functions App on Windows or Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see:
#   - https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-node
#   - https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-typescript
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Node.js project to Azure Function App

on:
  push:
    branches: ["main"]

env:
  AZURE_FUNCTIONAPP_NAME: 'fa-ep-node-test-1'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  NODE_VERSION: '20.x'                      # set this to the node version to use (e.g. '8.x', '10.x', '12.x')

jobs:
  build:
      runs-on: ubuntu-latest
      permissions:
        contents: read #This is required for actions/checkout
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4
  
      # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
      # - name: 'Login via Azure CLI'
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository
  
      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
 
      - name: jarvis-common - install
        run: yarn install --production
        working-directory: jarvis-common
 
      - name: jarvis-common - build
        run: yarn build
        working-directory: jarvis-common
 
      - name: jarvis-functions - install
        run: yarn install --production
        working-directory: jarvis-functions
 
      - name: jarvis-functions - build
        run: yarn build
        working-directory: jarvis-functions
      #- name: 'Resolve Project Dependencies Using Npm'
      #  shell: pwsh # For Linux, use bash
      #  run: |
      #    pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
      #    npm install
      #    npm run build --if-present
      #    npm run test --if-present
      #    popd
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7CFF50F5551C4A9485B585A5B2C37A91 }}
            tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C276C674215C40A382D4792542192D45 }}
            subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_602F2826DC414A36B6BF8D03B67875F1 }}
            
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC

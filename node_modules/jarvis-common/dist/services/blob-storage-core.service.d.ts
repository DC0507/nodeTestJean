import { ContainerClient } from '@azure/storage-blob';
export interface BlobClientConfig {
    account: string;
    accountKey: string;
}
export declare class DirectoryEntry {
    name: string;
}
export declare class DirectoryListing {
    constructor(path: string);
    path: string;
    files: DirectoryEntry[];
    subFolders: DirectoryEntry[];
}
export declare class BlobStorageCoreService {
    private blobServiceClient;
    private sharedKeyCredential;
    constructor(config: BlobClientConfig);
    getOrCreateContainer(containerName: string): ContainerClient;
    uploadFile(file: any, containerName: string): Promise<string>;
    uploadBuffer(buffer: Buffer, name: string, containerName: string): Promise<void>;
    listBlobs(path: string, containerName: string): Promise<DirectoryListing>;
    getPublicBlobUrl(name: string, containerName: string): Promise<string>;
    getSecureBlobUrl(name: string, containerName: string): Promise<string>;
}
//# sourceMappingURL=blob-storage-core.service.d.ts.map
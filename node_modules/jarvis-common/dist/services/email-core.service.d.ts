import { HTMLEmailMessage } from '../common';
export interface EmailClientConfig {
    apiSecret: string;
    apiKey: string;
    defaultFrom: string;
    defaultTo: string;
    releaseEmails: boolean;
}
export interface EmailAddress {
    Email: string;
    Name: string;
}
export interface EmailAttachment {
    ContentType: string;
    Filename: string;
    Base64Content: string;
    ContentID?: string;
}
export type EmailRecipients = string | string[] | EmailAddress | EmailAddress[];
export type EmailRecipient = string | EmailAddress;
export declare function toEmailList(emails: string | string[] | EmailAddress | EmailAddress[]): EmailAddress[];
export declare class EmailCoreService {
    private releaseEmails;
    readonly defaultTo: EmailAddress;
    private mailjetInstance;
    readonly defaultFrom: EmailAddress;
    constructor(config: EmailClientConfig);
    getEmailList(emails: EmailRecipients): EmailAddress[];
    sendHTMLEmailMessage(emails: EmailRecipients, message: HTMLEmailMessage, attachments?: EmailAttachment[], from?: EmailRecipient | null): Promise<any>;
    sendHTMLEmail(emails: EmailRecipients, subject: string, HTMLbody: string, from?: EmailRecipient | null, textBody?: string): Promise<any>;
    sendHTMLEmailWithAttachments(emails: EmailRecipients, subject: string, HTMLbody: string, attachments?: EmailAttachment[], inlinedAttachments?: EmailAttachment[], from?: EmailRecipient | null, textBody?: string): Promise<any>;
}
//# sourceMappingURL=email-core.service.d.ts.map